"use client"

// –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Å—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase

import { useState, useEffect } from "react"
import { supabase } from "../../supabase"

export function PremiumTab({ user, onPurchase }) {
  const [premiumItems, setPremiumItems] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [selectedItem, setSelectedItem] = useState(null)
  const [purchaseLoading, setPurchaseLoading] = useState(false)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const fetchPremiumItems = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å—ã
        const { data, error } = await supabase.from("premium_passes").select("*").order("price", { ascending: true })

        if (error) throw error

        if (data && data.length > 0) {
          setPremiumItems(data)
        } else {
          // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
          setPremiumItems([
            {
              id: 1,
              name: "Miner Pass",
              description: "–ü—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
              price: 1000,
              benefits: [
                "–î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞–π–Ω–µ—Ä–∞–º",
                "–ë–æ–Ω—É—Å +20% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞",
                "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 50 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
              ],
              image_url: "https://cdn-icons-png.flaticon.com/512/2991/2991148.png",
            },
            {
              id: 2,
              name: "VIP –°—Ç–∞—Ç—É—Å",
              description: "–≠–ª–∏—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤",
              price: 5000,
              benefits: [
                "–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Miner Pass",
                "–ë–æ–Ω—É—Å +50% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞",
                "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 200 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
                "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞",
              ],
              image_url: "https://cdn-icons-png.flaticon.com/512/2991/2991117.png",
            },
          ])
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–æ–≤:", err)
        setError(err.message)
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        setPremiumItems([
          {
            id: 1,
            name: "Miner Pass",
            description: "–ü—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
            price: 1000,
            benefits: [
              "–î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞–π–Ω–µ—Ä–∞–º",
              "–ë–æ–Ω—É—Å +20% –∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –º–∞–π–Ω–∏–Ω–≥–∞",
              "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å 50 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã",
            ],
            image_url: "https://cdn-icons-png.flaticon.com/512/2991/2991148.png",
          },
        ])
      } finally {
        setLoading(false)
      }
    }

    fetchPremiumItems()
  }, [])

  const handlePurchase = async (item) => {
    if (!user || user.balance < item.price) return

    setPurchaseLoading(true)
    setSelectedItem(item.id)

    try {
      // –í—ã–∑—ã–≤–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–∞
      const { data, error } = await supabase.rpc("purchase_miner_pass", {
        user_id_param: user.id,
        pass_type_param: item.id === 1 ? "standard" : "vip",
      })

      if (error) throw error

      if (data && data.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (onPurchase) {
          onPurchase(data.new_balance, true)
        }

        alert(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${item.name}!`)
      } else {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å–∞:", error)
      alert(`–û—à–∏–±–∫–∞: ${error.message || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É"}`)
    } finally {
      setPurchaseLoading(false)
      setSelectedItem(null)
    }
  }

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É benefits –≤ –º–∞—Å—Å–∏–≤, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–∏—à–ª–∞ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
  const parseBenefits = (item) => {
    if (!item.benefits) return []
    if (Array.isArray(item.benefits)) return item.benefits
    try {
      return JSON.parse(item.benefits)
    } catch (e) {
      return item.benefits.split(",").map((b) => b.trim())
    }
  }

  if (loading) {
    return (
      <div className="flex justify-center items-center py-8">
        <div className="w-8 h-8 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin"></div>
      </div>
    )
  }

  if (error && premiumItems.length === 0) {
    return (
      <div className="bg-red-500/20 border border-red-500/30 rounded-lg p-4 text-center">
        <p className="text-white">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {error}</p>
        <button
          className="mt-2 bg-blue-500 hover:bg-blue-600 px-3 py-1 rounded text-sm"
          onClick={() => window.location.reload()}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    )
  }

  return (
    <div className="space-y-4">
      {premiumItems.length === 0 ? (
        <div className="bg-[#242838] rounded-lg p-4 text-center">
          <p className="text-gray-400">–ü—Ä–µ–º–∏—É–º-—Å—Ç–∞—Ç—É—Å—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>
        </div>
      ) : (
        premiumItems.map((item) => (
          <div key={item.id} className="bg-[#242838] rounded-lg p-4">
            <div className="flex items-center mb-3">
              <div className="w-12 h-12 bg-yellow-500/30 rounded-lg flex items-center justify-center mr-3">
                <span className="text-2xl">‚ú®</span>
              </div>
              <div>
                <h3 className="font-semibold text-yellow-400">{item.name}</h3>
                <p className="text-sm text-gray-400">{item.description}</p>
              </div>
            </div>

            <div className="bg-[#1A1F2E] p-3 rounded mb-3">
              <div className="text-sm font-semibold mb-2">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</div>
              <ul className="text-sm text-gray-400 space-y-1">
                {parseBenefits(item).map((benefit, index) => (
                  <li key={index} className="flex items-start">
                    <span className="text-yellow-400 mr-2">‚úì</span>
                    <span>{benefit}</span>
                  </li>
                ))}
              </ul>
            </div>

            <div className="flex justify-between items-center">
              <div className="font-bold text-blue-400">{item.price} üíé</div>
              <button
                onClick={() => handlePurchase(item)}
                disabled={
                  purchaseLoading || !user || user.balance < item.price || (user?.hasMinerPass && item.id === 1)
                }
                className={`px-4 py-2 rounded ${
                  purchaseLoading && selectedItem === item.id
                    ? "bg-gray-600 cursor-wait"
                    : user?.hasMinerPass && item.id === 1
                      ? "bg-green-600 cursor-not-allowed"
                      : user && user.balance >= item.price
                        ? "bg-blue-600 hover:bg-blue-700"
                        : "bg-gray-600 cursor-not-allowed"
                }`}
              >
                {purchaseLoading && selectedItem === item.id ? (
                  <span>–ü–æ–∫—É–ø–∫–∞...</span>
                ) : user?.hasMinerPass && item.id === 1 ? (
                  <span>–£–∂–µ –∞–∫—Ç–∏–≤–µ–Ω</span>
                ) : user && user.balance < item.price ? (
                  <span>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</span>
                ) : (
                  <span>–ö—É–ø–∏—Ç—å</span>
                )}
              </button>
            </div>
          </div>
        ))
      )}
    </div>
  )
}

