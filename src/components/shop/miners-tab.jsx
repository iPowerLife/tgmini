"use client"

// –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Å—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ –≤–µ—Ä—Å–∏—é —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∏–∑ Supabase

import { useState, useEffect } from "react"
import { supabase } from "../../supabase"
import { createMockMiners } from "../../utils/mock-data"

export function MinersTab({ user, onPurchase }) {
  const [miners, setMiners] = useState([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [selectedMiner, setSelectedMiner] = useState(null)
  const [purchaseLoading, setPurchaseLoading] = useState(false)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–π–Ω–µ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    const fetchMiners = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –º–∞–π–Ω–µ—Ä–æ–≤
        const { data, error } = await supabase
          .from("miner_models")
          .select("*")
          .order("mining_power", { ascending: true })

        if (error) throw error

        if (data && data.length > 0) {
          setMiners(data)
        } else {
          // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
          setMiners(createMockMiners().map((m) => m.model))
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–∞–π–Ω–µ—Ä–æ–≤:", err)
        setError(err.message)
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        setMiners(createMockMiners().map((m) => m.model))
      } finally {
        setLoading(false)
      }
    }

    fetchMiners()
  }, [])

  const handlePurchase = async (miner) => {
    if (!user || user.balance < miner.price) return

    setPurchaseLoading(true)
    setSelectedMiner(miner.id)

    try {
      // –í—ã–∑—ã–≤–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –º–∞–π–Ω–µ—Ä–∞
      const { data, error } = await supabase.rpc("purchase_miner", {
        user_id_param: user.id,
        miner_model_id_param: miner.id,
      })

      if (error) throw error

      if (data && data.success) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (onPurchase) {
          onPurchase(data.new_balance)
        }

        alert(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ${miner.display_name || miner.name}!`)
      } else {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –º–∞–π–Ω–µ—Ä–∞:", error)
      alert(`–û—à–∏–±–∫–∞: ${error.message || "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É"}`)
    } finally {
      setPurchaseLoading(false)
      setSelectedMiner(null)
    }
  }

  if (loading) {
    return (
      <div className="flex justify-center items-center py-8">
        <div className="w-8 h-8 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin"></div>
      </div>
    )
  }

  if (error && miners.length === 0) {
    return (
      <div className="bg-red-500/20 border border-red-500/30 rounded-lg p-4 text-center">
        <p className="text-white">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {error}</p>
        <button
          className="mt-2 bg-blue-500 hover:bg-blue-600 px-3 py-1 rounded text-sm"
          onClick={() => window.location.reload()}
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    )
  }

  return (
    <div className="space-y-4">
      {miners.length === 0 ? (
        <div className="bg-[#242838] rounded-lg p-4 text-center">
          <p className="text-gray-400">–ú–∞–π–Ω–µ—Ä—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>
        </div>
      ) : (
        miners.map((miner) => (
          <div key={miner.id} className="bg-[#242838] rounded-lg p-4">
            <div className="flex items-center mb-3">
              <div className="w-12 h-12 bg-blue-500/20 rounded-lg flex items-center justify-center mr-3">
                <img
                  src={miner.image_url || "https://cdn-icons-png.flaticon.com/512/2991/2991109.png"}
                  alt={miner.display_name || miner.name}
                  className="w-8 h-8"
                />
              </div>
              <div>
                <h3 className="font-semibold">{miner.display_name || miner.name}</h3>
                <p className="text-sm text-gray-400">{miner.description || "–ú–∞–π–Ω–µ—Ä –¥–ª—è –¥–æ–±—ã—á–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"}</p>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-2 mb-3">
              <div className="bg-[#1A1F2E] p-2 rounded">
                <div className="text-xs text-gray-400">–ú–æ—â–Ω–æ—Å—Ç—å:</div>
                <div className="font-semibold">{miner.mining_power} h/s</div>
              </div>
              <div className="bg-[#1A1F2E] p-2 rounded">
                <div className="text-xs text-gray-400">–≠–Ω–µ—Ä–≥–∏—è:</div>
                <div className="font-semibold">{miner.energy_consumption} ‚ö°</div>
              </div>
            </div>

            <div className="flex justify-between items-center">
              <div className="font-bold text-blue-400">{miner.price} üíé</div>
              <button
                onClick={() => handlePurchase(miner)}
                disabled={purchaseLoading || !user || user.balance < miner.price}
                className={`px-4 py-2 rounded ${
                  purchaseLoading && selectedMiner === miner.id
                    ? "bg-gray-600 cursor-wait"
                    : user && user.balance >= miner.price
                      ? "bg-blue-600 hover:bg-blue-700"
                      : "bg-gray-600 cursor-not-allowed"
                }`}
              >
                {purchaseLoading && selectedMiner === miner.id ? (
                  <span>–ü–æ–∫—É–ø–∫–∞...</span>
                ) : user && user.balance < miner.price ? (
                  <span>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</span>
                ) : (
                  <span>–ö—É–ø–∏—Ç—å</span>
                )}
              </button>
            </div>
          </div>
        ))
      )}
    </div>
  )
}

