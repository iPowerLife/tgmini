"use client"

import { useState, useEffect } from "react"
import { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from "react-router-dom"
import { supabase } from "./supabase"
import HomePage from "./pages/home-page"
import ShopPage from "./pages/shop-page"
import ProfilePage from "./pages/profile-page"
import RatingPage from "./pages/rating-page"

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
const Navigation = ({ activeTab, onTabChange }) => {
  const navigate = useNavigate()

  const handleTabChange = (tab) => {
    onTabChange(tab)

    switch (tab) {
      case "home":
        navigate("/")
        break
      case "shop":
        navigate("/shop")
        break
      case "rating":
        navigate("/rating")
        break
      case "profile":
        navigate("/profile")
        break
      default:
        navigate("/")
    }
  }

  return (
    <div className="bg-[#242838]/80 p-3 flex justify-around">
      <button
        className={`p-2 rounded-lg ${activeTab === "home" ? "bg-blue-500/50" : ""}`}
        onClick={() => handleTabChange("home")}
      >
        üè†
      </button>
      <button
        className={`p-2 rounded-lg ${activeTab === "shop" ? "bg-blue-500/50" : ""}`}
        onClick={() => handleTabChange("shop")}
      >
        üõí
      </button>
      <button
        className={`p-2 rounded-lg ${activeTab === "rating" ? "bg-blue-500/50" : ""}`}
        onClick={() => handleTabChange("rating")}
      >
        üèÜ
      </button>
      <button
        className={`p-2 rounded-lg ${activeTab === "profile" ? "bg-blue-500/50" : ""}`}
        onClick={() => handleTabChange("profile")}
      >
        üë§
      </button>
    </div>
  )
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [activeTab, setActiveTab] = useState("home")
  const [user, setUser] = useState(null)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const initApp = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
        const {
          data: { session },
        } = await supabase.auth.getSession()

        if (session?.user) {
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const { data, error } = await supabase.from("users").select("*").eq("id", session.user.id).single()

          if (error) {
            throw error
          }

          if (data) {
            setUser(data)
          }
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", err)
        setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${err.message}`)
      } finally {
        setLoading(false)
      }
    }

    initApp()
  }, [])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      try {
        const tg = window.Telegram.WebApp
        tg.ready()
        tg.expand()

        console.log("Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
      } catch (err) {
        console.warn("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:", err)
      }
    }
  }, [])

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  useEffect(() => {
    const handlePageRefresh = () => {
      setActiveTab("home")
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º sessionStorage –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (!sessionStorage.getItem("app_initialized")) {
        sessionStorage.setItem("app_initialized", "true")
      } else {
        // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.location.href = "/"
      }
    }

    // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    handlePageRefresh()

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è beforeunload –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener("beforeunload", () => {
      sessionStorage.removeItem("app_initialized")
    })

    return () => {
      window.removeEventListener("beforeunload", () => {
        sessionStorage.removeItem("app_initialized")
      })
    }
  }, [])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleBalanceUpdate = (newBalance, updateMinerPass = false) => {
    setUser((prev) => ({
      ...prev,
      balance: newBalance,
      hasMinerPass: updateMinerPass ? true : prev.hasMinerPass,
    }))
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleLogout = () => {
    setUser(null)
  }

  if (loading) {
    return (
      <div className="fixed inset-0 flex items-center justify-center bg-[#1A1F2E] text-white">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin mb-4"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="fixed inset-0 flex items-center justify-center bg-[#1A1F2E] text-white">
        <div className="text-center max-w-md p-4">
          <div className="text-red-500 text-4xl mb-4">‚ö†Ô∏è</div>
          <h1 className="text-xl font-bold mb-2">–û—à–∏–±–∫–∞</h1>
          <p className="text-gray-300 mb-4">{error}</p>
          <button className="bg-blue-500 hover:bg-blue-600 px-4 py-2 rounded" onClick={() => window.location.reload()}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    )
  }

  return (
    <Router>
      <div className="fixed inset-0 flex flex-col bg-[#1A1F2E] text-white">
        {/* –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º */}
        <div className="bg-[#242838]/80 p-3 text-center">
          <h1 className="font-bold text-xl">–ú–∞–π–Ω–∏–Ω–≥ –ò–≥—Ä–∞</h1>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="flex-1 overflow-auto p-4">
          <Routes>
            <Route path="/" element={<HomePage user={user} />} />
            <Route path="/shop" element={<ShopPage user={user} onBalanceUpdate={handleBalanceUpdate} />} />
            <Route path="/rating" element={<RatingPage user={user} />} />
            <Route path="/profile" element={<ProfilePage user={user} onLogout={handleLogout} />} />
            <Route path="*" element={<Navigate to="/" replace />} />
          </Routes>
        </div>

        {/* –ù–∏–∂–Ω–µ–µ –º–µ–Ω—é */}
        <Navigation activeTab={activeTab} onTabChange={setActiveTab} />
      </div>
    </Router>
  )
}

export default App

