"use client"

import { useState, useEffect } from "react"
import { supabase } from "./supabase"

function App() {
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [activeTab, setActiveTab] = useState("home")
  const [user, setUser] = useState(null)

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    const initApp = async () => {
      try {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
        const {
          data: { session },
        } = await supabase.auth.getSession()

        if (session?.user) {
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const { data, error } = await supabase.from("users").select("*").eq("id", session.user.id).single()

          if (error) {
            throw error
          }

          if (data) {
            setUser(data)
          }
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", err)
        setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${err.message}`)
      } finally {
        setLoading(false)
      }
    }

    initApp()
  }, [])

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      try {
        const tg = window.Telegram.WebApp
        tg.ready()
        tg.expand()

        console.log("Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
      } catch (err) {
        console.warn("–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:", err)
      }
    }
  }, [])

  if (loading) {
    return (
      <div className="fixed inset-0 flex items-center justify-center bg-[#1A1F2E] text-white">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin mb-4"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="fixed inset-0 flex items-center justify-center bg-[#1A1F2E] text-white">
        <div className="text-center max-w-md p-4">
          <div className="text-red-500 text-4xl mb-4">‚ö†Ô∏è</div>
          <h1 className="text-xl font-bold mb-2">–û—à–∏–±–∫–∞</h1>
          <p className="text-gray-300 mb-4">{error}</p>
          <button className="bg-blue-500 hover:bg-blue-600 px-4 py-2 rounded" onClick={() => window.location.reload()}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    )
  }

  // –†–µ–Ω–¥–µ—Ä–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
  const renderContent = () => {
    switch (activeTab) {
      case "home":
        return (
          <div className="text-center">
            <div className="w-24 h-24 bg-blue-500/80 rounded-lg flex items-center justify-center mx-auto mb-4">
              <span className="text-4xl">üíé</span>
            </div>
            <h2 className="text-xl font-semibold mb-2">–ú–∞–π–Ω–∏–Ω–≥</h2>
            <p className="text-gray-400 mb-4">–î–æ–±—ã–≤–∞–π—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã</p>

            {user && (
              <div className="bg-[#242838]/80 p-3 rounded-lg">
                <p className="font-bold text-blue-400">–ë–∞–ª–∞–Ω—Å: {user.balance || 0} üíé</p>
                <p className="text-sm text-gray-400">Miner Pass: {user.hasMinerPass ? "–ê–∫—Ç–∏–≤–µ–Ω ‚ú®" : "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"}</p>
              </div>
            )}
          </div>
        )

      case "shop":
        return (
          <div className="text-center">
            <h2 className="text-xl font-semibold mb-4">–ú–∞–≥–∞–∑–∏–Ω</h2>
            <p className="text-gray-400 mb-4">–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º–∞–π–Ω–µ—Ä—ã –∏ —É–ª—É—á—à–µ–Ω–∏—è</p>

            <div className="grid grid-cols-2 gap-3">
              <div className="bg-[#242838]/80 p-3 rounded-lg">
                <div className="text-blue-400 text-xl mb-2">üñ•Ô∏è</div>
                <p className="font-semibold">–ú–∞–π–Ω–µ—Ä—ã</p>
              </div>
              <div className="bg-[#242838]/80 p-3 rounded-lg">
                <div className="text-yellow-400 text-xl mb-2">‚ö°</div>
                <p className="font-semibold">–ë—É—Å—Ç—ã</p>
              </div>
            </div>
          </div>
        )

      case "tasks":
        return (
          <div className="text-center">
            <h2 className="text-xl font-semibold mb-4">–ó–∞–¥–∞–Ω–∏—è</h2>
            <p className="text-gray-400 mb-4">–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã</p>

            <div className="space-y-3">
              <div className="bg-[#242838]/80 p-3 rounded-lg text-left">
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å</h3>
                    <p className="text-sm text-gray-400">–ü–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å –∑–∞ –≤—Ö–æ–¥ –≤ –∏–≥—Ä—É</p>
                  </div>
                  <div className="text-blue-400">+50 üíé</div>
                </div>
              </div>

              <div className="bg-[#242838]/80 p-3 rounded-lg text-left">
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞</h3>
                    <p className="text-sm text-gray-400">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å</p>
                  </div>
                  <div className="text-blue-400">+100 üíé</div>
                </div>
              </div>
            </div>
          </div>
        )

      case "profile":
        return (
          <div className="text-center">
            <div className="w-20 h-20 bg-blue-500/50 rounded-full flex items-center justify-center mx-auto mb-4">
              <span className="text-2xl">üë§</span>
            </div>
            <h2 className="text-xl font-semibold mb-2">{user?.display_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"}</h2>
            <p className="text-gray-400 mb-4">ID: {user?.id?.substring(0, 8) || "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"}</p>

            <div className="bg-[#242838]/80 p-3 rounded-lg mb-3">
              <p className="font-bold text-blue-400">–ë–∞–ª–∞–Ω—Å: {user?.balance || 0} üíé</p>
              <p className="text-sm text-gray-400">Miner Pass: {user?.hasMinerPass ? "–ê–∫—Ç–∏–≤–µ–Ω ‚ú®" : "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω"}</p>
            </div>

            <button className="bg-red-500 hover:bg-red-600 px-4 py-2 rounded w-full">–í—ã–π—Ç–∏</button>
          </div>
        )

      default:
        return <div>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>
    }
  }

  return (
    <div className="fixed inset-0 flex flex-col bg-[#1A1F2E] text-white">
      {/* –í–µ—Ä—Ö–Ω–∏–π –±–ª–æ–∫ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º */}
      <div className="bg-[#242838]/80 p-3 text-center">
        <h1 className="font-bold text-xl">–ú–∞–π–Ω–∏–Ω–≥ –ò–≥—Ä–∞</h1>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="flex-1 overflow-auto p-4">{renderContent()}</div>

      {/* –ù–∏–∂–Ω–µ–µ –º–µ–Ω—é */}
      <div className="bg-[#242838]/80 p-3 flex justify-around">
        <button
          className={`p-2 rounded-lg ${activeTab === "home" ? "bg-blue-500/50" : ""}`}
          onClick={() => setActiveTab("home")}
        >
          üè†
        </button>
        <button
          className={`p-2 rounded-lg ${activeTab === "shop" ? "bg-blue-500/50" : ""}`}
          onClick={() => setActiveTab("shop")}
        >
          üõí
        </button>
        <button
          className={`p-2 rounded-lg ${activeTab === "tasks" ? "bg-blue-500/50" : ""}`}
          onClick={() => setActiveTab("tasks")}
        >
          üìã
        </button>
        <button
          className={`p-2 rounded-lg ${activeTab === "profile" ? "bg-blue-500/50" : ""}`}
          onClick={() => setActiveTab("profile")}
        >
          üë§
        </button>
      </div>
    </div>
  )
}

export default App

