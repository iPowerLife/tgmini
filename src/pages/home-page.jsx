"use client"

import { useState } from "react"
import { MiningChart } from "../components/mining-chart"
import { Shield, Check, AlertCircle, TrendingUp } from "lucide-react"

// –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç MinerPassInfo
const MinerPassInfo = ({ userId, hasMinerPass }) => {
  const [loading, setLoading] = useState(false)

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç Miner Pass, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö
  if (!hasMinerPass) {
    return (
      <div className="bg-gray-900 rounded-2xl p-4 mb-4">
        <div className="flex justify-between items-center mb-3">
          <div className="flex items-center gap-2">
            <Shield className="text-yellow-500" size={20} />
            <span className="font-medium">Miner Pass</span>
          </div>
          <span className="text-sm text-gray-400">–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ</span>
        </div>

        <div className="bg-yellow-950/30 border border-yellow-500/20 rounded-lg p-3 mb-3">
          <div className="flex items-start gap-2">
            <AlertCircle className="text-yellow-500 shrink-0 mt-0.5" size={16} />
            <div className="text-sm text-yellow-500/90">
              –ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ Miner Pass –≤ –º–∞–≥–∞–∑–∏–Ω–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞
              –ø–æ–∫—É–ø–∫—É –º–∞–π–Ω–µ—Ä–æ–≤.
            </div>
          </div>
        </div>

        <div className="space-y-2">
          <div className="flex items-center gap-2 text-gray-400 text-sm">
            <div className="w-5 h-5 rounded-full bg-gray-800 flex items-center justify-center">
              <Check size={12} className="text-gray-500" />
            </div>
            <span>–°–Ω—è—Ç–∏–µ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–∞–π–Ω–µ—Ä–æ–≤</span>
          </div>
          <div className="flex items-center gap-2 text-gray-400 text-sm">
            <div className="w-5 h-5 rounded-full bg-gray-800 flex items-center justify-center">
              <Check size={12} className="text-gray-500" />
            </div>
            <span>–ë–æ–Ω—É—Å +10% –∫ —Ö–µ—à—Ä–µ–π—Ç—É –≤—Å–µ—Ö –º–∞–π–Ω–µ—Ä–æ–≤</span>
          </div>
          <div className="flex items-center gap-2 text-gray-400 text-sm">
            <div className="w-5 h-5 rounded-full bg-gray-800 flex items-center justify-center">
              <Check size={12} className="text-gray-500" />
            </div>
            <span>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã –∏ –Ω–∞–≥—Ä–∞–¥—ã</span>
          </div>
        </div>
      </div>
    )
  }

  // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å Miner Pass, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º
  return (
    <div className="bg-gray-900 rounded-2xl p-4 mb-4">
      <div className="flex justify-between items-center mb-3">
        <div className="flex items-center gap-2">
          <Shield className="text-yellow-500" size={20} />
          <span className="font-medium">Miner Pass</span>
        </div>
        <span className="text-sm text-green-500">–ê–∫—Ç–∏–≤–µ–Ω</span>
      </div>

      <div className="space-y-2">
        <div className="flex items-center gap-2 text-sm">
          <div className="w-5 h-5 rounded-full bg-yellow-500/20 flex items-center justify-center">
            <Check size={12} className="text-yellow-500" />
          </div>
          <span>–õ–∏–º–∏—Ç—ã –Ω–∞ –ø–æ–∫—É–ø–∫—É –º–∞–π–Ω–µ—Ä–æ–≤ —Å–Ω—è—Ç—ã</span>
        </div>
        <div className="flex items-center gap-2 text-sm">
          <div className="w-5 h-5 rounded-full bg-yellow-500/20 flex items-center justify-center">
            <Check size={12} className="text-yellow-500" />
          </div>
          <span>–ë–æ–Ω—É—Å +10% –∫ —Ö–µ—à—Ä–µ–π—Ç—É –∞–∫—Ç–∏–≤–µ–Ω</span>
        </div>
        <div className="flex items-center gap-2 text-sm">
          <div className="w-5 h-5 rounded-full bg-yellow-500/20 flex items-center justify-center">
            <Check size={12} className="text-yellow-500" />
          </div>
          <span>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã</span>
        </div>
      </div>
    </div>
  )
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
const HomePage = ({ user, balance, minersData, ratingData, transactionsData, ranksData }) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –≤–º–µ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
  const [chartData] = useState({
    data: [10, 15, 20, 18, 25, 30, 28, 35],
    labels: ["1/6", "2/6", "3/6", "4/6", "5/6", "6/6", "7/6", "8/6"],
  })

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é –º–æ—â–Ω–æ—Å—Ç—å –º–∞–π–Ω–µ—Ä–æ–≤
  const totalPower =
    minersData?.miners?.reduce((sum, miner) => sum + (miner.model?.mining_power || 0) * (miner.quantity || 1), 0) || 0

  return (
    <div className="home-page">
      <div className="app-container">
        <div className="background-gradient"></div>
        <div className="decorative-circle-1"></div>
        <div className="decorative-circle-2"></div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ –∏ –º–æ—â–Ω–æ—Å—Ç–∏ */}
        <div className="bg-gray-900 rounded-2xl p-4 mb-4">
          <div className="flex justify-between">
            <div>
              <div className="text-gray-400 text-sm">–ë–∞–ª–∞–Ω—Å</div>
              <div className="text-xl font-bold">{balance.toFixed(2)} üíé</div>
            </div>
            <div className="text-right">
              <div className="text-gray-400 text-sm">–û–±—â–∞—è –º–æ—â–Ω–æ—Å—Ç—å</div>
              <div className="text-xl font-bold flex items-center justify-end">
                <TrendingUp size={16} className="text-green-500 mr-1" />
                {totalPower}
              </div>
            </div>
          </div>
        </div>

        {/* –ì—Ä–∞—Ñ–∏–∫ –º–∞–π–Ω–∏–Ω–≥–∞ */}
        <MiningChart data={chartData.data} labels={chartData.labels} />

        {/* –ë–ª–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Miner Pass */}
        <MinerPassInfo userId={user?.id} hasMinerPass={user?.has_miner_pass} />

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–π–Ω–µ—Ä–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div className="bg-gray-900 rounded-2xl p-4 mb-4">
          <div className="flex justify-between items-center mb-3">
            <div className="flex items-center gap-2">
              <span className="font-medium">–ú–æ–∏ –º–∞–π–Ω–µ—Ä—ã</span>
            </div>
            <span className="text-sm text-gray-400">{minersData?.miners?.length || 0} —à—Ç.</span>
          </div>

          {minersData?.miners?.length > 0 ? (
            <div className="space-y-2">
              {minersData.miners.slice(0, 3).map((miner) => (
                <div key={miner.id} className="bg-gray-800 rounded-lg p-3 flex justify-between items-center">
                  <div>
                    <div className="font-medium">{miner.model?.display_name || miner.model?.name}</div>
                    <div className="text-sm text-gray-400">–ú–æ—â–Ω–æ—Å—Ç—å: {miner.model?.mining_power || 0}</div>
                  </div>
                  <div className="text-sm">x{miner.quantity}</div>
                </div>
              ))}

              {minersData.miners.length > 3 && (
                <div className="text-center text-sm text-blue-400 mt-2">
                  –ò –µ—â—ë {minersData.miners.length - 3} –º–∞–π–Ω–µ—Ä–æ–≤
                </div>
              )}
            </div>
          ) : (
            <div className="text-center text-gray-400 py-4">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –º–∞–π–Ω–µ—Ä–æ–≤. –ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∏—Ö –≤ –º–∞–≥–∞–∑–∏–Ω–µ.</div>
          )}
        </div>
      </div>
    </div>
  )
}

export default HomePage

